name: Terraform Infrastructure Deployment

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform Action (plan or apply)'
        required: true
        type: choice
        default: 'plan'
        options:
        - plan
        - apply
      target_branch:
        description: 'Branch to run on (e.g., main)'
        required: true
        default: 'main'
        type: string
      environment:
        description: Deployment Environment
        required: true
        type: choice
        options:
            - dev
            - prod
            - stage

permissions:
  id-token: write
  contents: read

env:
  TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }} 
  AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
  TERRAFORM_DIR: Infra/aws/
  TF_VAR_FILE: ../../environments/${{ inputs.environment }}.tfvars

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'plan'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.0 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE }}

      - name: Terraform Init (Configure S3 Backend)
        id: init
        run: terraform init -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" -backend-config="key=${{ vars.PROJECT_NAME || 'nodejs-crud-ecs' }}.tfstate" -var="deployment_role_arn=${{ secrets.AWS_ROLE }}"
        working-directory: Infra/aws/
        env:
          PROJECT_NAME: ${{ vars.PROJECT_NAME || 'nodejs-crud-ecs' }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -var-file=environments/dev.tfvars -var="db_password=${{ secrets.DB_MASTER_PASSWORD }}"
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ${{ env.TERRAFORM_DIR }}

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    if: github.event.inputs.action == 'apply'

    environment: 
      name: production
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} 

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}
          
      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: I${{ env.TERRAFORM_DIR }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE }}

      - name: Terraform Init (Configure S3 Backend)
        id: init
        run: terraform init -backend-config="bucket=${{ env.TF_STATE_BUCKET }}" -backend-config="key=${{ vars.PROJECT_NAME || 'nodejs-crud-ecs' }}.tfstate" -var="deployment_role_arn=${{ secrets.AWS_ROLE }}"
        working-directory: Infra/aws
        env:
          PROJECT_NAME: ${{ vars.PROJECT_NAME || 'nodejs-crud-ecs' }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
